from selenium.webdriver.common.by import By
from src.testproject.classes import DriverStepSettings, StepSettings
from src.testproject.decorator import report_assertion_errors
from src.testproject.enums import SleepTimingType
from src.testproject.sdk.drivers import webdriver
import pytest


"""
This pytest test was automatically generated by TestProject
    Project: Jupyter Notebook Functional Test
    Package: TestProject.Generated.Tests.JupyterNotebookFunctionalTest
    Test: Terminal - Webpage Function
    Generated by: Jianpeng Chen (jc107@uowmail.edu.au)
    Generated on 05/24/2021, 04:17:11
"""


@pytest.fixture()
def driver():
    driver = webdriver.Chrome(token="fk3yOvlRsLLpCaaggFfMO8vEplPSx8qsdrnNiqcDOgM",
                              project_name="Jupyter Notebook Functional Test",
                              job_name="Terminal - Webpage Function")
    step_settings = StepSettings(timeout=15000,
                                 sleep_time=500,
                                 sleep_timing_type=SleepTimingType.Before)
    with DriverStepSettings(driver, step_settings):
        yield driver
    driver.quit()


@report_assertion_errors
def test_main(driver):
    # Test Parameters
    # Auto generated application URL parameter
    ApplicationURL = "http://localhost:8888/tree"

    # 1. Navigate to '{ApplicationURL}'
    # Navigates the specified URL (Auto-generated)
    driver.get(f'{ApplicationURL}')

    # 2. Click 'functional test folder'
    functional_test_folder = driver.find_element(By.XPATH,
                                                 "//span[. = 'functional test folder']")
    functional_test_folder.click()

    # 3. Click 'New'
    new = driver.find_element(By.XPATH,
                              "//span[. = 'New']")
    new.click()

    # 4. Click 'Terminal1'
    terminal1 = driver.find_element(By.XPATH,
                                    "//a[. = 'Terminal']")
    terminal1.click()

    # 5. Switch to window '1'
    driver.switch_to.window(driver.window_handles[1])

    # 6. Close window with index '1'
    driver.close()

    # 7. Switch to window '0'
    driver.switch_to.window(driver.window_handles[0])

    # 8. Click 'New'
    new = driver.find_element(By.XPATH,
                              "//span[. = 'New']")
    new.click()

    # 9. Click 'Terminal1'
    terminal1 = driver.find_element(By.XPATH,
                                    "//a[. = 'Terminal']")
    terminal1.click()

    # 10. Switch to window '1'
    driver.switch_to.window(driver.window_handles[1])

    # 11. Click 'Logout'
    logout = driver.find_element(By.CSS_SELECTOR,
                                 "#logout")
    logout.click()

    # 12. Click 'login page'
    login_page = driver.find_element(By.XPATH,
                                     "//a[. = 'login page']")
    login_page.click()
