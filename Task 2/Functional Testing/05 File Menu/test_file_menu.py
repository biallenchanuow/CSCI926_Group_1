from selenium.webdriver.common.by import By
from src.testproject.classes import DriverStepSettings, StepSettings
from src.testproject.decorator import report_assertion_errors
from src.testproject.enums import SleepTimingType
from src.testproject.sdk.drivers import webdriver
import pytest


"""
This pytest test was automatically generated by TestProject
    Project: Jupyter Notebook Functional Test
    Package: TestProject.Generated.Tests.JupyterNotebookFunctionalTest
    Test: File Menu
    Generated by: Jianpeng Chen (jc107@uowmail.edu.au)
    Generated on 05/24/2021, 04:33:08
"""


@pytest.fixture()
def driver():
    driver = webdriver.Chrome(token="fk3yOvlRsLLpCaaggFfMO8vEplPSx8qsdrnNiqcDOgM",
                              project_name="Jupyter Notebook Functional Test",
                              job_name="File Menu")
    step_settings = StepSettings(timeout=15000,
                                 sleep_time=500,
                                 sleep_timing_type=SleepTimingType.Before)
    with DriverStepSettings(driver, step_settings):
        yield driver
    driver.quit()


@report_assertion_errors
def test_main(driver):
    # Test Parameters
    # Auto generated application URL parameter
    ApplicationURL = "http://localhost:8888/tree"

    # 1. Navigate to '{ApplicationURL}'
    # Navigates the specified URL (Auto-generated)
    driver.get(f'{ApplicationURL}')

    # 2. Click 'functional test folder'
    functional_test_folder = driver.find_element(By.XPATH,
                                                 "//span[. = 'functional test folder']")
    functional_test_folder.click()

    # 3. Click 'test_editor_01.ipynb'
    test_editor_01_ipynb = driver.find_element(By.XPATH,
                                               "//span[. = 'test_editor_01.ipynb']")
    test_editor_01_ipynb.click()

    # 4. Switch to window '1'
    driver.switch_to.window(driver.window_handles[1])

    # 5. Click 'File'
    file = driver.find_element(By.CSS_SELECTOR,
                               "#filelink")
    file.click()

    # 6. Click 'Make a Copy...'
    make_a_copy_ = driver.find_element(By.XPATH,
                                       "//a[. = 'Make a Copy...']")
    make_a_copy_.click()

    # 7. Switch to window '2'
    driver.switch_to.window(driver.window_handles[2])

    # 8. Switch to window '1'
    driver.switch_to.window(driver.window_handles[1])

    # 9. Click 'File'
    file = driver.find_element(By.CSS_SELECTOR,
                               "#filelink")
    file.click()

    # 10. Click 'Save as...'
    save_as_ = driver.find_element(By.XPATH,
                                   "//a[. = 'Save as...']")
    save_as_.click()

    # 11. Click 'Save'
    save = driver.find_element(By.XPATH,
                               "//button[. = 'Save']")
    save.click()

    # 12. Click 'Cancel1'
    cancel1 = driver.find_element(By.XPATH,
                                  "//button[. = 'Cancel']")
    cancel1.click()

    # 13. Click 'File'
    file = driver.find_element(By.CSS_SELECTOR,
                               "#filelink")
    file.click()

    # 14. Click 'Save as...'
    save_as_ = driver.find_element(By.XPATH,
                                   "//a[. = 'Save as...']")
    save_as_.click()

    # 15. Click 'INPUT1'
    input1 = driver.find_element(By.XPATH,
                                 "//input")
    input1.click()

    # 16. Click 'INPUT1'
    input1 = driver.find_element(By.XPATH,
                                 "//input")
    input1.click()

    # 17. Click 'INPUT1'
    input1 = driver.find_element(By.XPATH,
                                 "//input")
    input1.click()

    # 18. Click 'INPUT1'
    input1 = driver.find_element(By.XPATH,
                                 "//input")
    input1.click()

    # 19. Type '/false_functional_test_folder' in 'INPUT1'
    input1 = driver.find_element(By.XPATH,
                                 "//input")
    input1.send_keys("/false_functional_test_folder")

    # 20. Click 'Save'
    save = driver.find_element(By.XPATH,
                               "//button[. = 'Save']")
    save.click()

    # 21. Switch to window '0'
    driver.switch_to.window(driver.window_handles[0])

    # 22. Click 'I'
    i = driver.find_element(By.XPATH,
                            "//div[2]/ul//i")
    i.click()

    # 23. Click 'functional test folder'
    functional_test_folder = driver.find_element(By.XPATH,
                                                 "//span[. = 'functional test folder']")
    functional_test_folder.click()

    # 24. Click 'test_editor_01.ipynb1'
    test_editor_01_ipynb1 = driver.find_element(By.XPATH,
                                                "//span[. = 'test_editor_01.ipynb']")
    test_editor_01_ipynb1.click()

    # 25. Switch to window '3'
    driver.switch_to.window(driver.window_handles[3])

    # 26. Click 'File'
    file = driver.find_element(By.CSS_SELECTOR,
                               "#filelink")
    file.click()

    # 27. Click 'Print Preview'
    print_preview = driver.find_element(By.XPATH,
                                        "//a[. = 'Print Preview']")
    print_preview.click()

    # 28. Switch to window '4'
    driver.switch_to.window(driver.window_handles[4])

    # 29. Close window with index '4'
    driver.close()

    # 30. Switch to window '3'
    driver.switch_to.window(driver.window_handles[3])

    # 31. Click 'File'
    file = driver.find_element(By.CSS_SELECTOR,
                               "#filelink")
    file.click()

    # 32. Click 'Close and Halt'
    close_and_halt = driver.find_element(By.XPATH,
                                         "//a[. = 'Close and Halt']")
    close_and_halt.click()

    # 33. Type 'test editor 09' in 'TEXTAREA4'
    textarea4 = driver.find_element(By.XPATH,
                                    "//textarea")
    textarea4.send_keys("test editor 09")

    # 34. Click 'File'
    file = driver.find_element(By.CSS_SELECTOR,
                               "#filelink")
    file.click()

    # 35. Click 'Save as...'
    save_as_ = driver.find_element(By.XPATH,
                                   "//a[. = 'Save as...']")
    save_as_.click()

    # 36. Click 'Cancel1'
    cancel1 = driver.find_element(By.XPATH,
                                  "//button[. = 'Cancel']")
    cancel1.click()

    # 37. Click 'Save'
    save = driver.find_element(By.XPATH,
                               "//button[. = 'Save']")
    save.click()

    # 38. Click 'Cancel1'
    cancel1 = driver.find_element(By.XPATH,
                                  "//button[. = 'Cancel']")
    cancel1.click()
