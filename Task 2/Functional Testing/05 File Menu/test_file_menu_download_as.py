from selenium.webdriver.common.by import By
from src.testproject.classes import DriverStepSettings, StepSettings
from src.testproject.decorator import report_assertion_errors
from src.testproject.enums import SleepTimingType
from src.testproject.sdk.drivers import webdriver
import pytest


"""
This pytest test was automatically generated by TestProject
    Project: Jupyter Notebook Functional Test
    Package: TestProject.Generated.Tests.JupyterNotebookFunctionalTest
    Test: File Menu - Download As
    Generated by: Jianpeng Chen (jc107@uowmail.edu.au)
    Generated on 05/24/2021, 04:31:47
"""


@pytest.fixture()
def driver():
    driver = webdriver.Chrome(token="fk3yOvlRsLLpCaaggFfMO8vEplPSx8qsdrnNiqcDOgM",
                              project_name="Jupyter Notebook Functional Test",
                              job_name="File Menu - Download As")
    step_settings = StepSettings(timeout=15000,
                                 sleep_time=500,
                                 sleep_timing_type=SleepTimingType.Before)
    with DriverStepSettings(driver, step_settings):
        yield driver
    driver.quit()


@report_assertion_errors
def test_main(driver):
    # Test Parameters
    # Auto generated application URL parameter
    ApplicationURL = "http://localhost:8888/tree"

    # 1. Navigate to '{ApplicationURL}'
    # Navigates the specified URL (Auto-generated)
    driver.get(f'{ApplicationURL}')

    # 2. Click 'functional test folder'
    functional_test_folder = driver.find_element(By.XPATH,
                                                 "//span[. = 'functional test folder']")
    functional_test_folder.click()

    # 3. Click 'test_editor_09.ipynb'
    test_editor_09_ipynb = driver.find_element(By.XPATH,
                                               "//span[. = 'test_editor_09.ipynb']")
    test_editor_09_ipynb.click()

    # 4. Switch to window '1'
    driver.switch_to.window(driver.window_handles[1])

    # 5. Click 'DIV2'
    div2 = driver.find_element(By.XPATH,
                               "//div[6]/div[1]/div/div")
    div2.click()

    # 6. Click 'File'
    file = driver.find_element(By.CSS_SELECTOR,
                               "#filelink")
    file.click()

    # 7. Click 'AsciiDoc (.asciidoc)'
    asciidoc_asciidoc_ = driver.find_element(By.XPATH,
                                             "//a[. = 'AsciiDoc (.asciidoc)']")
    asciidoc_asciidoc_.click()

    # 8. Switch to window '2'
    driver.switch_to.window(driver.window_handles[2])

    # 9. Close window with index '2'
    driver.close()

    # 10. Switch to window '1'
    driver.switch_to.window(driver.window_handles[1])

    # 11. Click 'File'
    file = driver.find_element(By.CSS_SELECTOR,
                               "#filelink")
    file.click()

    # 12. Click 'HTML (.html)'
    html_html_ = driver.find_element(By.XPATH,
                                     "//a[. = 'HTML (.html)']")
    html_html_.click()

    # 13. Switch to window '2'
    driver.switch_to.window(driver.window_handles[2])

    # 14. Close window with index '2'
    driver.close()

    # 15. Switch to window '1'
    driver.switch_to.window(driver.window_handles[1])

    # 16. Click 'File'
    file = driver.find_element(By.CSS_SELECTOR,
                               "#filelink")
    file.click()

    # 17. Click 'LaTeX (.tex)'
    latex_tex_ = driver.find_element(By.XPATH,
                                     "//a[. = 'LaTeX (.tex)']")
    latex_tex_.click()

    # 18. Switch to window '2'
    driver.switch_to.window(driver.window_handles[2])

    # 19. Close window with index '2'
    driver.close()

    # 20. Switch to window '1'
    driver.switch_to.window(driver.window_handles[1])

    # 21. Click 'File'
    file = driver.find_element(By.CSS_SELECTOR,
                               "#filelink")
    file.click()

    # 22. Click 'Markdown (.md)'
    markdown_md_ = driver.find_element(By.XPATH,
                                       "//a[. = 'Markdown (.md)']")
    markdown_md_.click()

    # 23. Switch to window '2'
    driver.switch_to.window(driver.window_handles[2])

    # 24. Close window with index '2'
    driver.close()

    # 25. Switch to window '1'
    driver.switch_to.window(driver.window_handles[1])

    # 26. Click 'File'
    file = driver.find_element(By.CSS_SELECTOR,
                               "#filelink")
    file.click()

    # 27. Click 'Notebook (.ipynb)'
    notebook_ipynb_ = driver.find_element(By.XPATH,
                                          "//a[. = 'Notebook (.ipynb)']")
    notebook_ipynb_.click()

    # 28. Switch to window '2'
    driver.switch_to.window(driver.window_handles[2])

    # 29. Close window with index '2'
    driver.close()

    # 30. Switch to window '1'
    driver.switch_to.window(driver.window_handles[1])

    # 31. Click 'File'
    file = driver.find_element(By.CSS_SELECTOR,
                               "#filelink")
    file.click()

    # 32. Click 'PDF via LaTeX (.pdf)'
    pdf_via_latex_pdf_ = driver.find_element(By.XPATH,
                                             "//a[. = 'PDF via LaTeX (.pdf)']")
    pdf_via_latex_pdf_.click()

    # 33. Switch to window '2'
    driver.switch_to.window(driver.window_handles[2])

    # 34. Close window with index '2'
    driver.close()

    # 35. Switch to window '1'
    driver.switch_to.window(driver.window_handles[1])

    # 36. Click 'File'
    file = driver.find_element(By.CSS_SELECTOR,
                               "#filelink")
    file.click()

    # 37. Click 'reST (.rst)'
    rest_rst_ = driver.find_element(By.XPATH,
                                    "//a[. = 'reST (.rst)']")
    rest_rst_.click()

    # 38. Switch to window '2'
    driver.switch_to.window(driver.window_handles[2])

    # 39. Close window with index '2'
    driver.close()

    # 40. Switch to window '1'
    driver.switch_to.window(driver.window_handles[1])

    # 41. Click 'File'
    file = driver.find_element(By.CSS_SELECTOR,
                               "#filelink")
    file.click()

    # 42. Click 'Python (.py)'
    python_py_ = driver.find_element(By.XPATH,
                                     "//a[. = 'Python (.py)']")
    python_py_.click()

    # 43. Switch to window '2'
    driver.switch_to.window(driver.window_handles[2])

    # 44. Close window with index '2'
    driver.close()

    # 45. Switch to window '1'
    driver.switch_to.window(driver.window_handles[1])

    # 46. Click 'File'
    file = driver.find_element(By.CSS_SELECTOR,
                               "#filelink")
    file.click()

    # 47. Click 'Reveal.js slides (.slides.html)'
    reveal_js_slides_slides_html_ = driver.find_element(By.XPATH,
                                                        "//a[. = 'Reveal.js slides (.slides.html)']")
    reveal_js_slides_slides_html_.click()

    # 48. Switch to window '2'
    driver.switch_to.window(driver.window_handles[2])

    # 49. Close window with index '2'
    driver.close()

    # 50. Switch to window '1'
    driver.switch_to.window(driver.window_handles[1])

    # 51. Click 'File'
    file = driver.find_element(By.CSS_SELECTOR,
                               "#filelink")
    file.click()

    # 52. Click 'PDF via pyppeteer (.html)'
    pdf_via_pyppeteer_html_ = driver.find_element(By.XPATH,
                                                  "//a[. = 'PDF via pyppeteer (.html)']")
    pdf_via_pyppeteer_html_.click()

    # 53. Switch to window '2'
    driver.switch_to.window(driver.window_handles[2])

    # 54. Switch to window '1'
    driver.switch_to.window(driver.window_handles[1])
